#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API –ª–∏—Ü–µ–Ω–∑–∏—Ä–æ–≤–∞–Ω–∏—è Shuffle
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./test_license.sh [base_url] [api_key]

BASE_URL=${1:-"http://localhost:5001"}
API_KEY=${2:-"your-api-key-here"}

echo "üîë –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –ª–∏—Ü–µ–Ω–∑–∏—Ä–æ–≤–∞–Ω–∏—è Shuffle"
echo "================================================"
echo "Base URL: $BASE_URL"
echo "API Key: $API_KEY"
echo ""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è HTTP –∑–∞–ø—Ä–æ—Å–æ–≤
make_request() {
    local method=$1
    local endpoint=$2
    local data=$3
    local description=$4
    
    echo "üì° $description"
    echo "   $method $endpoint"
    
    if [ -n "$data" ]; then
        echo "   Data: $data"
        response=$(curl -s -X $method \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $API_KEY" \
            -d "$data" \
            "$BASE_URL$endpoint")
    else
        response=$(curl -s -X $method \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $API_KEY" \
            "$BASE_URL$endpoint")
    fi
    
    echo "   Response: $response"
    echo ""
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º response –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    echo "$response"
}

# 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é –ª–∏—Ü–µ–Ω–∑–∏—é
echo "1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–π –ª–∏—Ü–µ–Ω–∑–∏–∏"
license_info=$(make_request "GET" "/api/v1/license/info" "" "–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ª–∏—Ü–µ–Ω–∑–∏–∏")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ª–∏—Ü–µ–Ω–∑–∏—è
if echo "$license_info" | grep -q '"success":true'; then
    echo "‚úÖ –õ–∏—Ü–µ–Ω–∑–∏—è –Ω–∞–π–¥–µ–Ω–∞"
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–ª—é—á –ª–∏—Ü–µ–Ω–∑–∏–∏ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–∏—Ö —Ç–µ—Å—Ç–æ–≤
    license_key=$(echo "$license_info" | grep -o '"key":"[^"]*"' | cut -d'"' -f4)
    echo "   –ö–ª—é—á –ª–∏—Ü–µ–Ω–∑–∏–∏: $license_key"
else
    echo "‚ö†Ô∏è  –ê–∫—Ç–∏–≤–Ω–∞—è –ª–∏—Ü–µ–Ω–∑–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    license_key=""
fi

echo ""

# 2. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—É—é –ª–∏—Ü–µ–Ω–∑–∏—é (—Ç—Ä–µ–±—É–µ—Ç –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞)
echo "2Ô∏è‚É£ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–π –ª–∏—Ü–µ–Ω–∑–∏–∏"
generate_data='{
    "type": "professional",
    "organization_id": "test-org-123",
    "duration": 365
}'

new_license=$(make_request "POST" "/api/v1/license/generate" "$generate_data" "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–π –ª–∏—Ü–µ–Ω–∑–∏–∏")

if echo "$new_license" | grep -q '"success":true'; then
    echo "‚úÖ –õ–∏—Ü–µ–Ω–∑–∏—è —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞"
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–æ–≤—ã–π –∫–ª—é—á
    new_license_key=$(echo "$new_license" | grep -o '"key":"[^"]*"' | cut -d'"' -f4)
    echo "   –ù–æ–≤—ã–π –∫–ª—é—á: $new_license_key"
else
    echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ª–∏—Ü–µ–Ω–∑–∏—é (–≤–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–Ω—ã –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞)"
    new_license_key=""
fi

echo ""

# 3. –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –ª–∏—Ü–µ–Ω–∑–∏—é (–µ—Å–ª–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–ª–∏ –Ω–æ–≤—É—é)
if [ -n "$new_license_key" ]; then
    echo "3Ô∏è‚É£ –ê–∫—Ç–∏–≤–∞—Ü–∏—è –Ω–æ–≤–æ–π –ª–∏—Ü–µ–Ω–∑–∏–∏"
    activate_data="{
        \"key\": \"$new_license_key\",
        \"hardware_id\": \"test-hardware-$(date +%s)\"
    }"
    
    activation_result=$(make_request "POST" "/api/v1/license/activate" "$activate_data" "–ê–∫—Ç–∏–≤–∞—Ü–∏—è –ª–∏—Ü–µ–Ω–∑–∏–∏")
    
    if echo "$activation_result" | grep -q '"success":true'; then
        echo "‚úÖ –õ–∏—Ü–µ–Ω–∑–∏—è —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞"
    else
        echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ª–∏—Ü–µ–Ω–∑–∏—é"
    fi
else
    echo "3Ô∏è‚É£ –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∞–∫—Ç–∏–≤–∞—Ü–∏—é (–Ω–µ—Ç –Ω–æ–≤–æ–≥–æ –∫–ª—é—á–∞)"
fi

echo ""

# 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞—â–∏—â–µ–Ω–Ω—ã–µ endpoints
echo "4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞—â–∏—â–µ–Ω–Ω—ã—Ö endpoints"

# –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è workflow (—Ç—Ä–µ–±—É–µ—Ç –ª–∏—Ü–µ–Ω–∑–∏—é)
echo "   –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ workflow..."
workflow_data='{
    "name": "Test License Workflow",
    "description": "Workflow –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ª–∏—Ü–µ–Ω–∑–∏–∏",
    "tags": ["test", "license"]
}'

workflow_result=$(make_request "POST" "/api/v1/workflows" "$workflow_data" "–°–æ–∑–¥–∞–Ω–∏–µ workflow")

if echo "$workflow_result" | grep -q '"success":true'; then
    echo "‚úÖ Workflow —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ"
elif echo "$workflow_result" | grep -q 'license_required'; then
    echo "‚ö†Ô∏è  –°–æ–∑–¥–∞–Ω–∏–µ workflow –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ - —Ç—Ä–µ–±—É–µ—Ç—Å—è –ª–∏—Ü–µ–Ω–∑–∏—è"
else
    echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ workflow"
fi

echo ""

# 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç—ã
echo "5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–º–∏—Ç–æ–≤ –ª–∏—Ü–µ–Ω–∑–∏–∏"

# –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö
users_result=$(make_request "GET" "/api/v1/users" "" "–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")

if echo "$users_result" | grep -q '"success":true'; then
    echo "‚úÖ –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ–ª—É—á–µ–Ω"
    # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–¥—Å—á–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
elif echo "$users_result" | grep -q 'license_required'; then
    echo "‚ö†Ô∏è  –î–æ—Å—Ç—É–ø –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω - —Ç—Ä–µ–±—É–µ—Ç—Å—è –ª–∏—Ü–µ–Ω–∑–∏—è"
else
    echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
fi

echo ""

# 6. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏—Ü–µ–Ω–∑–∏–∏
echo "6Ô∏è‚É£ –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏—Ü–µ–Ω–∑–∏–∏"
final_license_info=$(make_request "GET" "/api/v1/license/info" "" "–§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏—Ü–µ–Ω–∑–∏–∏")

if echo "$final_license_info" | grep -q '"success":true'; then
    echo "‚úÖ –õ–∏—Ü–µ–Ω–∑–∏—è –∞–∫—Ç–∏–≤–Ω–∞"
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    echo ""
    echo "üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ª–∏—Ü–µ–Ω–∑–∏–∏:"
    echo "$final_license_info" | python3 -m json.tool 2>/dev/null || echo "$final_license_info"
else
    echo "‚ùå –õ–∏—Ü–µ–Ω–∑–∏—è –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞ –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
fi

echo ""
echo "üèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
echo "========================"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ jq –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞ JSON
if command -v jq &> /dev/null; then
    echo ""
    echo "üí° –î–ª—è –ª—É—á—à–µ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è JSON –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ jq:"
    echo "   curl -H \"Authorization: Bearer $API_KEY\" $BASE_URL/api/v1/license/info | jq"
fi

echo ""
echo "üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: backend/LICENSE_SYSTEM.md"
echo "üîß CLI –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç: cd backend/go-app && go run license_generator.go -help"